[path name ext] = fileparts('[batch_dfn]');

EEG = pop_loadset('filename','[batch_dfn]','filepath','[batch_dfp]');
EEG = eeg_checkset( EEG );

% add STUDY variables
% subject
EEG.subject = EEG.filename(6:8);
%group
if strcmp(EEG.filename(6),'6');
    EEG.group = 'at-risk';
elseif strcmp(EEG.filename(6),'7');
    EEG.group = 'control';
else
    disp('COULD NOT DETERMIN THE GROUP ID FROM FILENAME');
end;
%session
EEG.session = str2num(EEG.filename(15:16));


% Removed flagged time segments and Independent Components
EEG = pop_marks_select_data(EEG,'time marks',[],'labels',{'manual'},'remove','on');
EEG = pop_marks_select_data(EEG,'component marks',[],'labels',{'manual'},'remove','on');
EEG = eeg_checkset(EEG);

%average rereference.
chan_inds = marks_label2index(EEG.marks.chan_info,{'manual','rank'},'indexes','invert','on');
EEG = warp_locs( EEG,'derivatives/seg_sta_dyn_dir_ind_nois/code/misc/standard_1020_bucanl19.elc','transform',[0,0,0,0,0,-1.57,1,1,1],'manual','off');
EEG = interp_ref(EEG,'derivatives/seg_sta_dyn_dir_ind_nois/code/misc/standard_1020_bucanl19.elc','chans',chan_inds);
EEG.chaninfo.nosedir='+Y';
EEG = eeg_checkset(EEG);

% Interpolate flagged channels
manual_mark_ind=find(strcmp('manual',{EEG.marks.chan_info.label}));
rank_mark_ind=find(strcmp('rank',{EEG.marks.chan_info.label}));
flags=EEG.marks.chan_info(manual_mark_ind).flags+EEG.marks.chan_info(rank_mark_ind).flags;
chan_inds=find(flags);
EEG = pop_interp(EEG,chan_inds,'spherical');


%purge unnecessary fields...
for i=1:length(EEG.marks.time_info);
    EEG.marks.time_info(i).flags=[];
end
EEG.data_sd_ep=[];
EEG.c_data_sd_ep=[];
EEG.data_sd_ch=[];
EEG.c_data_sd_ch=[];
EEG.m_neigbr_r_ch=[];
EEG.c_neigbr_r_ch=[];
EEG.m_neigbr_r_lat=[];
EEG.c_neigbr_r_lat=[];
EEG.amica=[];
EEG.icaact_sd1_lat=[];
EEG.c_icaact1_sd_lat=[];
EEG.icaact_sd2_lat=[];
EEG.c_icaact_sd2_lat=[];
EEG.icaact_ta_lat=[];
EEG.c_icaact_ta_lat=[];
EEG.icaact_b_lat=[];
EEG.c_icaact_b_lat=[];
EEG.icaact = [];
EEG.icawinv = [];
EEG.icasphere = [];
EEG.icaweights = [];
EEG.icachansind = [];


%lowpass filter
%EEG = pop_eegfiltnew(EEG,[], 1,[],1,[],0);
EEG = pop_eegfiltnew(EEG,[],30,[],0,[],0);


tmpEEG=EEG;

% static face direct gaze
outfname='derivatives/seg_sta_dyn_dir_ind_nois/[/,1,batch_dfn,_,-2]_desc-SEGstadir_eeg.set'
[outpath outname outext] = fileparts(outfname);
if ~exist(outpath,'dir');
    mkdir(outpath);
end
EEG = pop_epoch( tmpEEG, { 'sta1' }, ...
                 [-.2 .8], 'newname', 'direct', 'epochinfo', 'yes');
EEG = pop_rmbase( EEG, [-200    0]);
EEG.condition = 'static_face_dir';
EEG = pop_saveset( EEG, 'filename',outfname);

% static face indirect gaze
outfname='derivatives/seg_sta_dyn_dir_ind_nois/[/,1,batch_dfn,_,-2]_desc-SEGstaind_eeg.set'
[outpath outname outext] = fileparts(outfname);
if ~exist(outpath,'dir');
    mkdir(outpath);
end
EEG = pop_epoch( tmpEEG, { 'sta2','sta3' }, ...
                 [-.2 .8], 'newname', 'indirect', 'epochinfo', 'yes');
EEG = pop_rmbase( EEG, [-200    0]);
EEG.condition = 'static_face_ind';
EEG = pop_saveset( EEG, 'filename',outfname);

% dynamic face direct gaze
outfname='derivatives/seg_sta_dyn_dir_ind_nois/[/,1,batch_dfn,_,-2]_desc-SEGdyndir_eeg.set'
[outpath outname outext] = fileparts(outfname);
if ~exist(outpath,'dir');
    mkdir(outpath);
end
EEG = pop_epoch( tmpEEG, { 'dyn1' }, ...
                 [-.2 .8], 'newname', 'direct', 'epochinfo', 'yes');
EEG = pop_rmbase( EEG, [-200    0]);
EEG.condition = 'dynamic_face_dir';
EEG = pop_saveset( EEG, 'filename',outfname);

% dynamic face indirect gaze
outfname='derivatives/seg_sta_dyn_dir_ind_nois/[/,1,batch_dfn,_,-2]_desc-SEGdynind_eeg.set'
[outpath outname outext] = fileparts(outfname);
if ~exist(outpath,'dir');
    mkdir(outpath);
end
EEG = pop_epoch( tmpEEG, { 'dyn2','dyn3' }, ...
                 [-.2 .8], 'newname', 'indirect', 'epochinfo', 'yes');
EEG = pop_rmbase( EEG, [-200    0]);
EEG.condition = 'dynamic_face_ind';
EEG = pop_saveset( EEG, 'filename',outfname);



% noise face
outfname='derivatives/seg_sta_dyn_dir_ind_nois/[/,1,batch_dfn,_,-2]_desc-SEGnois_eeg.set'
[outpath outname outext] = fileparts(outfname);
if ~exist(outpath,'dir');
    mkdir(outpath);
end
EEG = pop_epoch( tmpEEG, { 'Nois' }, ...
                 [-.2 .8], 'newname', 'noise', 'epochinfo', 'yes');
EEG = pop_rmbase( EEG, [-200    0]);
EEG.condition = 'noise';
EEG = pop_saveset( EEG, 'filename',outfname);


